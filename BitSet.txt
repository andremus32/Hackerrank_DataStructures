//Data Structures Java BitSet

import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        BitSet b1 = new BitSet(N);
        BitSet b2 = new BitSet(N);

        while (M-- > 0) {

            String str = sc.next();
            int x = sc.nextInt();
            int y = sc.nextInt();
            if (str.equals("AND") && x == 1) {
                b1.and(b2);
            } else if (str.equals("AND")) {
                b2.and(b1);
            } else if (str.equals("OR") && x == 1) {
                b1.or(b2);
            } else if (str.equals("OR")) {
                b2.or(b1);
            } else if (str.equals("XOR") && x == 1) {
                b1.xor(b2);
            } else if (str.equals("XOR")) {
                b2.xor(b1);
            } else if (str.equals("FLIP") && x == 1) {
                b1.flip(y);
            } else if (str.equals("FLIP")) {
                b2.flip(y);
            } else if (str.equals("SET") && x == 1) {
                b1.set(y);
            } else if (str.equals("SET")) {
                b2.set(y);
            } else {
            }

            System.out.println(b1.cardinality() + " " + b2.cardinality());

        }
        sc.close();
    }
}
