// Data Structures Java 1D Array (Part 2)
import java.util.*;

public class Solution {
    public static boolean canWin(int leap, int[] game, int i) {
        // Return true if you can win the game; otherwise, return false.
        if(i< 0 || game[i] == 1){
            return false;
        }
        if((i == game.length - 1) || i + leap >game.length - 1){
            return true;
        }
        game[i] = 1;
        return canWin(leap, game, i + 1) || canWin(leap, game, i - 1) || canWin(leap, game, i + leap);
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int q = scan.nextInt();
        while (q-- > 0) {
            int n = scan.nextInt();
            int leap = scan.nextInt();

            int[] game = new int[n];
            for (int i = 0; i< n; i++) {
                game[i] = scan.nextInt();
            }

            System.out.println( (canWin(leap, game, 0)) ? "YES" : "NO" );
        }
        scan.close();
    }
}

//===================================================================
//вариант if-else (доделать)

importjava.util.*;

public class Solution {
    public static boolean canWin(int leap, int[] game) {
        // Return true if you can win the game; otherwise, return false.
        boolean isWin = false;
        for(int i = 0; i<game.length; i++){
            if(game[i] == 1){
                isWin = false;
                break;
            }
            else if(game[i] == 0 &&i+leap>= game.length-1){
                isWin = true;
                break;
            }
            else if(game[i] == 0 && game[i+leap] == 0){
                i+=leap;
            }
            else if(i<game.length-1){
                if(game[i+1] == 1){
                    if(i> 1){
                        if(game[i-1] == 0){
                            game[i] = 1;
                            i-=2;
                        }

                    }
                }
            }
        }
        return isWin;
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int q = scan.nextInt();
        while (q-- > 0) {
            int n = scan.nextInt();
            int leap = scan.nextInt();

            int[] game = new int[n];
            for (int i = 0; i< n; i++) {
                game[i] = scan.nextInt();
            }

            System.out.println( (canWin(leap, game)) ? "YES" : "NO" );
        }
        scan.close();
    }
}

